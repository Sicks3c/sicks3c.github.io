<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xss on Security Writeups</title>
    <link>http://localhost:1313/tags/xss/</link>
    <description>Recent content in Xss on Security Writeups</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 01 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/xss/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tale of XSS in Angular</title>
      <link>http://localhost:1313/posts/tale-of-xss-in-angular/</link>
      <pubDate>Sun, 01 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/tale-of-xss-in-angular/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/0*67LG7dce-XrL1Pdk&#34; alt=&#34;Angular XSS Featured Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hello Security Researchers and Hackers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this writeup I explain how I found 2 rXSS vulnerabilities in Angular using automation.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tools-used&#34;&gt;Tools Used&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://findomain.app/&#34;&gt;Findomain&lt;/a&gt; for subdomain monitoring&lt;/li&gt;
&lt;li&gt;Wappalyzer for technology detection&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;discovery-process&#34;&gt;Discovery Process&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Received Telegram alert for new subdomains&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Identified Angular 1.6 using Wappalyzer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Found reflected error parameter:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://redacted.com/Home/Error?error=USER_NOT_AUTHORIZED&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;exploitation&#34;&gt;Exploitation&lt;/h2&gt;
&lt;p&gt;Used payload from &lt;a href=&#34;https://github.com/swisskyrepo/PayloadsAllTheThings&#34;&gt;PayloadsAllTheThings&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*cj_dJMkwSfiThMOIRyOMMA.png&#34; alt=&#34;XSS Execution Proof&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;key-takeaways&#34;&gt;Key Takeaways&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Demonstrate concrete impact for better severity rating&lt;/li&gt;
&lt;li&gt;Automate monitoring for fresh targets&lt;/li&gt;
&lt;li&gt;Know framework-specific vulnerabilities&lt;/li&gt;
&lt;/ul&gt;</description>
      <content>&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/0*67LG7dce-XrL1Pdk&#34; alt=&#34;Angular XSS Featured Image&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hello Security Researchers and Hackers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In this writeup I explain how I found 2 rXSS vulnerabilities in Angular using automation.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;tools-used&#34;&gt;Tools Used&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://findomain.app/&#34;&gt;Findomain&lt;/a&gt; for subdomain monitoring&lt;/li&gt;
&lt;li&gt;Wappalyzer for technology detection&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;discovery-process&#34;&gt;Discovery Process&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Received Telegram alert for new subdomains&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Identified Angular 1.6 using Wappalyzer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Found reflected error parameter:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://redacted.com/Home/Error?error=USER_NOT_AUTHORIZED&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;exploitation&#34;&gt;Exploitation&lt;/h2&gt;
&lt;p&gt;Used payload from &lt;a href=&#34;https://github.com/swisskyrepo/PayloadsAllTheThings&#34;&gt;PayloadsAllTheThings&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*cj_dJMkwSfiThMOIRyOMMA.png&#34; alt=&#34;XSS Execution Proof&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;key-takeaways&#34;&gt;Key Takeaways&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Demonstrate concrete impact for better severity rating&lt;/li&gt;
&lt;li&gt;Automate monitoring for fresh targets&lt;/li&gt;
&lt;li&gt;Know framework-specific vulnerabilities&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>
